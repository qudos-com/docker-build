#!/bin/bash

set -e

# The docker repo.
REPO="$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME"

# Usage prints the help for this command.
usage() {
  echo "Usage:"
  echo "    docker-build command"
  echo ""
  echo "Commands:"
  echo "    timestamp  Set a files last modified time to match it's git commit timestamp."
  echo "    load   Loads a docker image from '~/.docker/image.tar'"
  echo "    save   Saves the docker image to '~/.docker/image.tar'"
  echo "    build  Build a docker image from this repo. \$EXTRA_BUILD_ARGS can be set to add additional build options"
  echo "    tag    Tag the docker image from this repo with the git sha and branch."
  echo "    push   Push the built image to the docker registry. \$DOCKER_EMAIL, \$DOCKER_USER, and \$DOCKER_PASS are required"
  exit 1
}


load() {
  if [[ -e ~/.docker/image.tar ]]; then
    docker load -i ~/.docker/image.tar
  fi
}

save() {
  declare repo="$1"
  mkdir -p ~/.docker
  docker save "$repo" > ~/.docker/image.tar
}

# Build builds the docker image and tags it.
build() {
  declare repo="$1"
  docker build -t "$repo" $EXTRA_BUILD_ARGS .
}

tag() {
  declare repo="$1" sha="$CIRCLE_SHA1" branch="$CIRCLE_BRANCH"
  docker tag --force "$repo" "${repo}:${sha}"
  docker tag --force "$repo" "${repo}:${branch}"
}

# Push pushes all of the built docker images.
push() {
  declare repo="$1"

  if [ -z "$DOCKER_EMAIL" ] || [ -z "$DOCKER_USER" ] || [ -z "$DOCKER_PASS" ]; then
    usage
  fi

  docker login -e "$DOCKER_EMAIL" -u "$DOCKER_USER" -p "$DOCKER_PASS"
  docker push "$repo"
}

timestamp() {
  declare FILE=$1

  if [ ! -f $FILE ]; then
      echo "File not found!"
      exit 1
  fi

  REV=$(git rev-list -n 1 HEAD "$FILE");
  STAMP=$(git show --pretty=format:%ai --abbrev-commit "$REV" | head -n 1);
  touch -d "$STAMP" $FILE;

  echo "Set $FILE to $STAMP"
}

case "$1" in
  "load")
    load
    ;;
  "save")
    save "$REPO"
    ;;
  "build")
    build "$REPO"
    ;;
  "tag")
    tag "$REPO"
    ;;
  "push")
    push "$REPO"
    ;;
  "timestamp")
    timestamp "$2"
    ;;
  *)
    usage
    ;;
esac
